import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'package:shared_preferences/shared_preferences.dart';
import 'package:assistantstroke/services/api_service.dart';

class ProfileController {
  Future<int?> _getUserId() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    return prefs.getInt('userId'); // L·∫•y userId thay v√¨ token
  }

  Future<Map<String, dynamic>?> fetchUserData(BuildContext context) async {
    int? userId = await _getUserId();
    if (userId == null) {
      print('üö® Kh√¥ng t√¨m th·∫•y userId! Ng∆∞·ªùi d√πng ch∆∞a ƒëƒÉng nh·∫≠p.');
      ScaffoldMessenger.of(
        context,
      ).showSnackBar(SnackBar(content: Text('Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.')));
      return null;
    }

    final String url = "${ApiEndpoints.profile}/$userId"; // G·ªçi API b·∫±ng userId

    try {
      final response = await http.get(
        Uri.parse(url),
        headers: {'Content-Type': 'application/json'},
      );

      if (response.statusCode == 200) {
        return jsonDecode(response.body);
      } else {
        print('‚ö†Ô∏è L·ªói khi g·ªçi API: ${response.statusCode}');
        ScaffoldMessenger.of(
          context,
        ).showSnackBar(SnackBar(content: Text('L·ªói khi g·ªçi API!')));
      }
    } catch (error) {
      print('üö® L·ªói k·∫øt n·ªëi API: $error');
      ScaffoldMessenger.of(
        context,
      ).showSnackBar(SnackBar(content: Text('Kh√¥ng th·ªÉ k·∫øt n·ªëi t·ªõi server!')));
    }

    return null;
  }
}
